{"paragraphs":[{"text":"%md\n**Homepage:** https://vega.github.io/vega-lite/\n","user":"anonymous","dateUpdated":"2017-03-05T08:13:54+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong>Homepage:</strong> <a href=\"https://vega.github.io/vega-lite/\">https://vega.github.io/vega-lite/</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1488697968773_-1466840486","id":"20170305-081248_175200267","dateCreated":"2017-03-05T08:12:48+0100","dateStarted":"2017-03-05T08:13:54+0100","dateFinished":"2017-03-05T08:13:54+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8691"},{"text":"%pyspark\nimport sys\nprint(\"Python: \" + sys.version.replace(\"\\n\", \" - \"))\nprint(\"Spark:  \" + sc.version)\n","user":"anonymous","dateUpdated":"2017-03-05T08:15:17+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Python: 3.5.2 |Anaconda 4.2.0 (x86_64)| (default, Jul  2 2016, 17:52:12)  - [GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)]\nSpark:  2.1.0\n"}]},"apps":[],"jobName":"paragraph_1488693343856_805302105","id":"20170305-065543_1700752641","dateCreated":"2017-03-05T06:55:43+0100","dateStarted":"2017-03-05T08:15:17+0100","dateFinished":"2017-03-05T08:15:34+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8692"},{"text":"%pyspark\nimport sys\nsys.path += [\"/Users/bernhard/Development/advanced-angular-for-pyspark\"]\nfrom zeppelin_session import ZeppelinSession","user":"anonymous","dateUpdated":"2017-03-05T08:49:31+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1488693303032_-569082263","id":"20170305-065503_817572294","dateCreated":"2017-03-05T06:55:03+0100","dateStarted":"2017-03-05T08:49:31+0100","dateFinished":"2017-03-05T08:49:31+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8693"},{"text":"%pyspark\nimport time\n\nclass VegaLite:\n    def __init__(self, zeppelinContext):\n        self.zeppelinContext = zeppelinContext\n        self.session = ZeppelinSession(zeppelinContext)\n        self._loadVL()\n        self.session.init()\n    \n    def _loadVL(self):\n        print(\"\"\"%html\n        <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n        <script src=\"http://vega.github.io/vega/vega.js\" charset=\"utf-8\"></script>\n        <script src=\"http://vega.github.io/vega-lite/vega-lite.js\" charset=\"utf-8\"></script>\n        \"\"\")\n        \n    def _loadVLEmbed(self):\n        print(\"\"\"%html\n        <script src=\"http://vega.github.io/vega-editor/vendor/vega-embed.js\" charset=\"utf-8\"></script>\n        \"\"\")\n\n    def start(self):\n        self._loadVLEmbed() # It seems to be safer to load VegaLite embedding in a separate paragraph\n        self.session.start()\n        jsFunc = \"\"\"\n        vgplot = function(session, object) {\n            var embedSpec = {\n              mode: \"vega-lite\",\n              spec: object.vlSpec\n            }\n            console.log()\n            setTimeout(function(){ \n                vg.embed(\"#\" + object.plotId, embedSpec, function(error, result) {\n                    console.log(\"Plot \" + object.plotId + \" finished\")\n                });\n            }, 200);\n        }\n        \"\"\"\n        self.session.registerFunction(\"vgplot\", jsFunc)\n        \n    def plot(self, plotId, vlSpec):\n        print(\"%angular\")\n        print(\"\"\"<div id=\"%s\"></div>\"\"\" % plotId)\n        self.session.call(\"vgplot\", {\"plotId\":plotId, \"vlSpec\":vlSpec})\n \n    def dfToJson(self, df, columns):\n        return [dict([(col, row[1][col]) for col in columns])  for row in list(df.iterrows())]\n    ","user":"anonymous","dateUpdated":"2017-03-05T10:00:41+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1488693266117_-1305353740","id":"20170305-065426_1304014201","dateCreated":"2017-03-05T06:54:26+0100","dateStarted":"2017-03-05T10:00:41+0100","dateFinished":"2017-03-05T10:00:41+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8694"},{"title":"Initialize ZeppelinSession and VegaLite ...","text":"%pyspark\nvg = VegaLite(z.z)\n","user":"anonymous","dateUpdated":"2017-03-05T10:00:43+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"        <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n        <script src=\"http://vega.github.io/vega/vega.js\" charset=\"utf-8\"></script>\n        <script src=\"http://vega.github.io/vega-lite/vega-lite.js\" charset=\"utf-8\"></script>\n        \n"},{"type":"ANGULAR","data":"<div id=\"__Zeppelin_Session_2CCB6PV9K_Comm__\">{{__zeppelin_comm_2CCB6PV9K_status__}}</div>\n\n"}]},"apps":[],"jobName":"paragraph_1488694367464_1619498652","id":"20170305-071247_1434290149","dateCreated":"2017-03-05T07:12:47+0100","dateStarted":"2017-03-05T10:00:43+0100","dateFinished":"2017-03-05T10:00:43+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8695"},{"title":"... and start ZeppelinSession and VegaLite integration in the next (!) paragraph","text":"%pyspark\nvg.start()\n","user":"anonymous","dateUpdated":"2017-03-05T10:00:45+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"        <script src=\"http://vega.github.io/vega-editor/vendor/vega-embed.js\" charset=\"utf-8\"></script>\n        \n"},{"type":"ANGULAR","data":"\n<script>\n    var sessionCommVar = \"__zeppelin_comm_2CCB6PV9K_msg__\";\n    var sessionCommDivId = \"__Zeppelin_Session_2CCB6PV9K_Comm__\"\n    var execution_id = \"efe810f6-4f30-424d-a7c1-87353a9ecaab\"                                                // Avoid double execution\n    if(window.__zeppelin_already_executed__ == null) {                     //\n        window.__zeppelin_already_executed__ = [];                         //\n    }                                                                      //\n    if(!window.__zeppelin_already_executed__.includes(execution_id)) {     // Avoid double execution\n\n        // Get the angular scope of the session div element\n        console.log(\"Get scope for div id \" + sessionCommDivId);\n        var $scope = angular.element(document.getElementById(sessionCommDivId)).scope();\n\n        // Remove any remaining watcher from last session\n        if(typeof(window.__zeppelin_notebook_unwatchers__) !== \"undefined\") {\n            console.info(\"ZeppelinSession: Cancel watchers\");\n            var unwatchers = window.__zeppelin_notebook_unwatchers__\n            for(i in unwatchers) {\n                unwatchers[i]();\n            }\n        }\n        \n        // Array to note all active watchers (as with their respective unwatcher function)\n        window.__zeppelin_notebook_unwatchers__ = [];\n        \n        // make scope easily accessible in Web Console\n        window.__zeppelin_comm_scope = $scope;\n\n        console.info(\"Install Angular watcher for session comm var \" + sessionCommVar);\n        var unwatch = $scope.$watch(sessionCommVar, function(newValue, oldValue, scope) {\n            \n            // The global message handler\n            \n            if(typeof(newValue) !== \"undefined\") {\n\n                if (newValue.task === \"call\") {\n\n                    // Format: newValue = {\"id\": int, task\":\"call\", \"msg\":{\"function\":\"func_name\", \"object\":\"json_string\"}}\n                    \n                    var data = newValue.msg;\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        $scope.__functions[data.function]($scope, data.object);\n                    } else {\n                        alert(\"Unknown function: \" + data.function + \"()\")\n                    }\n                    \n                } else if (newValue.task === \"register\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"register\", \"msg\":{\"function\":\"func_name\", \"funcBody\":\"function_as_string\"}}\n                    \n                    var data = newValue.msg;\n                    var func = eval(data.funcBody);\n                    $scope.__functions[data.function] = func;\n                    \n                } else if (newValue.task === \"unregister\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"unregister\", \"msg\":{\"function\":\"func_name\"}}\n                    \n                    var data = newValue.msg;\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        delete $scope.__functions[data.function];\n                    }               \n                    \n                } else if (newValue.task === \"dump\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"dump\", \"msg\":{}}\n                    \n                    console.log(\"sessionCommDivId: \", sessionCommDivId);\n                    console.log(\"$scope: \", $scope);\n                    \n                } else {\n                    alert(\"Unknown task: \" + JSON.stringify(newValue));\n                }\n            }\n        }, true)\n        \n        // Initialize the object that will hold the registered functions\n        $scope.__functions = {};\n        \n        // remember unwatch function to clean up later\n        window.__zeppelin_notebook_unwatchers__.push(unwatch)\n        \n        // mark init as executed\n        window.__zeppelin_already_executed__.push(execution_id);            // Avoid double execution\n    } else {                                                                //\n        console.info(\"Angular script already executed, skipped\");           //\n    }                                                                       // Avoid double execution\n</script>\n\n"}]},"apps":[],"jobName":"paragraph_1488695790431_784066462","id":"20170305-073630_89848965","dateCreated":"2017-03-05T07:36:30+0100","dateStarted":"2017-03-05T10:00:45+0100","dateFinished":"2017-03-05T10:00:45+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8696"},{"title":"A first plot","text":"%pyspark\n#!zeppelin2md:barchart.png\n\ndata = [\n  {\"a\": \"A\",\"b\": 28}, {\"a\": \"B\",\"b\": 55}, {\"a\": \"C\",\"b\": 43},\n  {\"a\": \"D\",\"b\": 91}, {\"a\": \"E\",\"b\": 81}, {\"a\": \"F\",\"b\": 53},\n  {\"a\": \"G\",\"b\": 19}, {\"a\": \"H\",\"b\": 87}, {\"a\": \"I\",\"b\": 52}\n]\n    \nbarChart = {\n  \"description\": \"A simple bar chart with embedded data.\",\n  \"data\": {\"values\": data},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n  }\n}\nvg.plot(\"b1\", barChart)","user":"anonymous","dateUpdated":"2017-03-05T12:31:26+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"b1\"></div>\n"}]},"apps":[],"jobName":"paragraph_1488694980607_38642566","id":"20170305-072300_1993207994","dateCreated":"2017-03-05T07:23:00+0100","dateStarted":"2017-03-05T12:31:26+0100","dateFinished":"2017-03-05T12:31:26+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8697"},{"text":"%md\n## Visualizing iris data\n","user":"anonymous","dateUpdated":"2017-03-05T12:28:48+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488713309067_-571339245","id":"20170305-122829_2096414235","dateCreated":"2017-03-05T12:28:29+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12097","dateFinished":"2017-03-05T12:28:50+0100","dateStarted":"2017-03-05T12:28:48+0100","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Visualizing iris data</h2>\n</div>"}]}},{"text":"%sh\ncd /tmp\nwget  https://raw.github.com/pydata/pandas/master/pandas/tests/data/iris.csv\n","user":"anonymous","dateUpdated":"2017-03-05T10:11:52+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh","tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"--2017-03-05 08:29:42--  https://raw.github.com/pydata/pandas/master/pandas/tests/data/iris.csv\nResolving raw.github.com... 151.101.112.133\nConnecting to raw.github.com|151.101.112.133|:443... connected.\nHTTP request sent, awaiting response... 301 Moved Permanently\nLocation: https://raw.githubusercontent.com/pydata/pandas/master/pandas/tests/data/iris.csv [following]\n--2017-03-05 08:29:42--  https://raw.githubusercontent.com/pydata/pandas/master/pandas/tests/data/iris.csv\nResolving raw.githubusercontent.com... 151.101.112.133\nConnecting to raw.githubusercontent.com|151.101.112.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 4600 (4.5K) [text/plain]\nSaving to: ‘iris.csv’\n\n     0K ....                                                  100% 6.33M=0.001s\n\n2017-03-05 08:29:42 (6.33 MB/s) - ‘iris.csv’ saved [4600/4600]\n\n"}]},"apps":[],"jobName":"paragraph_1488698832343_1959975117","id":"20170305-082712_2052291564","dateCreated":"2017-03-05T08:27:12+0100","dateStarted":"2017-03-05T08:29:42+0100","dateFinished":"2017-03-05T08:29:42+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8698"},{"text":"%pyspark\nimport pandas as pd\niris = pd.read_csv('/tmp/iris.csv')\nprint(iris.head())\n\n","user":"anonymous","dateUpdated":"2017-03-05T10:12:05+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"   SepalLength  SepalWidth  PetalLength  PetalWidth         Name\n0          5.1         3.5          1.4         0.2  Iris-setosa\n1          4.9         3.0          1.4         0.2  Iris-setosa\n2          4.7         3.2          1.3         0.2  Iris-setosa\n3          4.6         3.1          1.5         0.2  Iris-setosa\n4          5.0         3.6          1.4         0.2  Iris-setosa\n"}]},"apps":[],"jobName":"paragraph_1488695058230_-2113349977","id":"20170305-072418_419991557","dateCreated":"2017-03-05T07:24:18+0100","dateStarted":"2017-03-05T10:12:05+0100","dateFinished":"2017-03-05T10:12:05+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8699"},{"text":"%pyspark\n\ncolumns = ['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth']\nnames = ['Iris-setosa', 'Iris-versicolor', 'Iris-virginica']\n\ndef irisScatter(name, col1, col2):\n    data = vg.dfToJson(iris[iris[\"Name\"] == name], [col1, col2])\n    vlSpec = {\n        \"width\": 400,\n        \"height\": 400,\n        \"data\": {\"values\":data},\n        \"mark\": \"point\",\n        \"encoding\": {\n            \"x\": {\"field\": col1, \"type\": \"quantitative\"  },\n            \"y\": {\"field\": col2, \"type\": \"quantitative\"  }\n        }\n    }\n    vg.plot(\"iris-scatter\", vlSpec)\n","user":"anonymous","dateUpdated":"2017-03-05T12:27:13+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1488699010298_2125264425","id":"20170305-083010_825697639","dateCreated":"2017-03-05T08:30:10+0100","dateStarted":"2017-03-05T12:27:13+0100","dateFinished":"2017-03-05T12:27:13+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8700"},{"text":"%pyspark\n#!zeppelin2md:iris-scatter.png\n\nirisScatter(\"Iris-setosa\", \"SepalLength\", \"SepalWidth\")","user":"anonymous","dateUpdated":"2017-03-05T12:31:31+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488704913439_-1534995833","id":"20170305-100833_593023102","dateCreated":"2017-03-05T10:08:33+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10002","dateFinished":"2017-03-05T12:31:31+0100","dateStarted":"2017-03-05T12:31:31+0100","results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"iris-scatter\"></div>\n"}]}},{"text":"%pyspark\nirisScatter(\"Iris-versicolor\", \"SepalLength\", \"SepalWidth\")","user":"anonymous","dateUpdated":"2017-03-05T12:31:37+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488700230635_-1858465081","id":"20170305-085030_2086418325","dateCreated":"2017-03-05T08:50:30+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:8704","dateFinished":"2017-03-05T12:31:38+0100","dateStarted":"2017-03-05T12:31:37+0100","title":"Overwrite the above plot","results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"iris-scatter\"></div>\n"}]}},{"text":"%md\n### Quickly build a Trellis Plot\n","user":"anonymous","dateUpdated":"2017-03-05T12:29:35+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488713343839_-1583937053","id":"20170305-122903_1267298566","dateCreated":"2017-03-05T12:29:03+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12175","dateFinished":"2017-03-05T12:29:35+0100","dateStarted":"2017-03-05T12:29:35+0100","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Quickly build a Trellis Plot</h3>\n</div>"}]}},{"text":"%pyspark\n\niris_s = iris.loc[:,[\"SepalLength\", \"SepalWidth\", \"Name\"]]\niris_s.columns = [\"Length\", \"Width\", \"Name\"]\niris_s[\"Leaf\"] = \"Sepal\"\n\niris_p = iris.loc[:,[\"PetalLength\", \"PetalWidth\", \"Name\"]]\niris_p.columns = [\"Length\", \"Width\", \"Name\"]\niris_p[\"Leaf\"] = \"Petal\"\n\niris2 = pd.concat([iris_s, iris_p])\niris2.head()","user":"anonymous","dateUpdated":"2017-03-05T12:43:38+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488706170857_-744557436","id":"20170305-102930_313435006","dateCreated":"2017-03-05T10:29:30+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10461","dateFinished":"2017-03-05T12:43:38+0100","dateStarted":"2017-03-05T12:43:38+0100","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"   Length  Width         Name   Leaf\n0     5.1    3.5  Iris-setosa  Sepal\n1     4.9    3.0  Iris-setosa  Sepal\n2     4.7    3.2  Iris-setosa  Sepal\n3     4.6    3.1  Iris-setosa  Sepal\n4     5.0    3.6  Iris-setosa  Sepal\n"}]}},{"text":"%pyspark\n#!zeppelin2md:iris-trellis.png\n\nvlSpec = {\n  \"description\": \"Iris Data\",\n  \"data\": {\"values\": vg.dfToJson(iris2, iris2.columns)},\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"row\": {\"field\": \"Name\", \"type\": \"ordinal\"},\n    \"column\":    {\"field\": \"Leaf\", \"type\": \"ordinal\"},\n    \"x\": {\"field\": \"Length\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Width\",  \"type\": \"quantitative\"}\n  }\n}\nvg.plot(\"iris-trellis\", vlSpec)","user":"anonymous","dateUpdated":"2017-03-05T12:31:44+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488706278005_53197244","id":"20170305-103118_1931101363","dateCreated":"2017-03-05T10:31:18+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10598","dateFinished":"2017-03-05T12:31:45+0100","dateStarted":"2017-03-05T12:31:44+0100","results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"iris-trellis\"></div>\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2017-03-05T10:41:17+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1488706877030_-46046070","id":"20170305-104117_308106920","dateCreated":"2017-03-05T10:41:17+0100","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10984"}],"name":"VegaLite - The python way","id":"2CCB6PV9K","angularObjects":{"2CA5R39SP:shared_process":[],"2C9PBPHP2:shared_process":[{"name":"__zeppelin_comm_2CCB6PV9K_msg__","object":{"msg":{"function":"vgplot","object":{"vlSpec":{"data":{"values":[{"a":"A","b":28},{"a":"B","b":55},{"a":"C","b":43},{"a":"D","b":91},{"a":"E","b":81},{"a":"F","b":53},{"a":"G","b":19},{"a":"H","b":87},{"a":"I","b":52}]},"description":"A simple bar chart with embedded data.","encoding":{"x":{"field":"a","type":"ordinal"},"y":{"field":"b","type":"quantitative"}},"mark":"bar"},"plotId":"b1"}},"task":"call","id":2},"noteId":"2CCB6PV9K"},{"name":"__zeppelin_comm_2CCB6PV9K_status__","object":"ZeppelinSession started (do not delete this paragraph)","noteId":"2CCB6PV9K"}],"2C9T35AYY:shared_process":[],"2CDENW1UJ:shared_process":[],"2CA3CRS2J:shared_process":[],"2CAVHABDX:shared_process":[],"2CARY5ZYS:shared_process":[],"2CB9RSR89:shared_process":[],"2CASZNT3R:shared_process":[],"2CA4UU9ZH:shared_process":[],"2CCYSWEBF:shared_process":[],"2CA17HE2U:shared_process":[],"2CCHGTGDY:shared_process":[],"2CACZ48YM:shared_process":[],"2C9R2RW8Y:shared_process":[],"2CCZZ351R:shared_process":[],"2C9RAHG2K:shared_process":[],"2CCWBCHAT:shared_process":[],"2C9MFUCEM:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}