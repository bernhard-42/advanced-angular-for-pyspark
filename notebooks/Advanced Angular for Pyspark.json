{"paragraphs":[{"title":"Some helper functions","text":"%pyspark\n\ndef versionCheck():\n    import sys\n    print(\"Python: \" + sys.version.replace(\"\\n\", \" - \"))\n    print(\"Spark:  \" + sc.version)\n\ndef display(html):\n    print(\"%angular\")\n    print(html)\n\ndef getNoteId():\n    return z.z.getInterpreterContext().getNoteId()\n\ndef getParagraphId():\n    return z.z.getInterpreterContext().getParagraphId()\n\n\nversionCheck()\n","user":"anonymous","dateUpdated":"2017-03-11T10:39:44+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Python: 3.5.2 |Anaconda 4.3.0 (x86_64)| (default, Jul  2 2016, 17:52:12)  - [GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)]\nSpark:  2.1.0\n"}]},"apps":[],"jobName":"paragraph_1489155283834_1643627789","id":"20170304-121836_865067366","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:39:44+0100","dateFinished":"2017-03-11T10:40:02+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:132287"},{"title":"Simple Angular variable binding","text":"%pyspark\n\ndisplay(\"\"\"\n\n<b>Hello {{name}} !</b>\n<div>Note Id:      <i>\"%s\"</i> (see browser address line)</div>\n<div>Paragraph Id: <i>\"%s\"</i> (see paragraph menu)</div>\n\n\"\"\" % (getNoteId(), getParagraphId()))\n\nz.z.angularBind(\"name\", \"Zeppelin\")\n","user":"anonymous","dateUpdated":"2017-03-11T10:40:11+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"\n<b>Hello {{name}} !</b>\n<div>Note Id:      <i>\"2CC9PZU7B\"</i> (see browser address line)</div>\n<div>Paragraph Id: <i>\"20170304-210239_1540885795\"</i> (see paragraph menu)</div>\n\n"}]},"apps":[],"jobName":"paragraph_1489155283835_1643243040","id":"20170304-210239_1540885795","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:40:11+0100","dateFinished":"2017-03-11T10:40:11+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132288"},{"text":"%pyspark\n\nz.z.angularBind(\"name\", \"Apache Zeppelin\")\n","user":"anonymous","dateUpdated":"2017-03-11T10:40:14+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1489157755667_440040163","id":"20170310-155555_57806824","dateCreated":"2017-03-10T15:55:55+0100","dateStarted":"2017-03-11T10:40:14+0100","dateFinished":"2017-03-11T10:40:14+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132289"},{"title":"Trigger simple Javascript functions via DOM buttons","text":"%pyspark\n\ndisplay(\"\"\"<button id=\"abcde\" ng-click=\"run = run + 1\">Click {{run}}</button>\"\"\")\n\nz.z.angularBind(\"run\", 0)","user":"anonymous","dateUpdated":"2017-03-11T10:40:16+0100","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<button id=\"abcde\" ng-click=\"run = run + 1\">Click {{run}}</button>\n"}]},"apps":[],"jobName":"paragraph_1489155283837_1640934546","id":"20170304-122140_404002024","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:40:16+0100","dateFinished":"2017-03-11T10:40:16+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132290"},{"text":"%md\n## How to trigger Javascript functions: ZeppelinSession, a custom Angular watcher\n\nClicking on some DOM button is sometimes OK, however it would be great to have a way to trigger Javascript functions from Python.\n\nSo let's use the capabilities of `z.z.angularBind`, `z.z.angularUnbind` and `z.z.angular` together with `$scope.$watch` (the Angular way to trigger javascript functions based on changed variables). This is implemnted in the class ZeppelinSession.\n\nPreparation step on the machine running Zeppelin Server:\n\n```\ngit clone https://github.com/bernhard-42/advanced-angular-for-pyspark\ncd advanced-angular-for-pyspark\npip install zeppelin_session    # use the pip command of the python installation used in Zeppelin\n```","user":"anonymous","dateUpdated":"2017-03-10T15:41:47+0100","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>How to trigger Javascript functions: ZeppelinSession, a custom Angular watcher</h2>\n<p>Clicking on some DOM button is sometimes OK, however it would be great to have a way to trigger Javascript functions from Python.</p>\n<p>So let&rsquo;s use the capabilities of <code>z.z.angularBind</code>, <code>z.z.angularUnbind</code> and <code>z.z.angular</code> together with <code>$scope.$watch</code> (the Angular way to trigger javascript functions based on changed variables). This is implemnted in the class ZeppelinSession.</p>\n<p>Preparation step on the machine running Zeppelin Server:</p>\n<pre><code>git clone https://github.com/bernhard-42/advanced-angular-for-pyspark\ncd advanced-angular-for-pyspark\npip install zeppelin_session    # use the pip command of the python installation used in Zeppelin\n</code></pre>\n</div>"}]},"apps":[],"jobName":"paragraph_1489155283837_1640934546","id":"20170304-134854_1991643647","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-10T15:41:47+0100","dateFinished":"2017-03-10T15:41:47+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132291"},{"title":"Create a new session","text":"%pyspark\n\nfrom zeppelin_session import ZeppelinSession # , resetZeppelinSession\n\nsession = ZeppelinSession(z.z)\nsession.init()\n","user":"anonymous","dateUpdated":"2017-03-11T10:41:10+0100","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"__Zeppelin_Session_2CC9PZU7B_Comm__\">{{__zeppelin_comm_2CC9PZU7B_status__}}</div>\n\n"}]},"apps":[],"jobName":"paragraph_1489155283844_1724425058","id":"20170304-135033_419842332","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:41:10+0100","dateFinished":"2017-03-11T10:41:10+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132294"},{"title":"Start the session (means start Angular watching)","text":"%pyspark\nsession.start()\n","user":"anonymous","dateUpdated":"2017-03-11T10:41:32+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div>You should now see<br><span style=\"margin:20px\"><i>ZeppelinSession started (do not delete this paragraph)</i></span></br>in the paragraph above</div>\n"}]},"apps":[],"jobName":"paragraph_1489155283845_1724040309","id":"20170304-162707_558911560","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:41:32+0100","dateFinished":"2017-03-11T10:41:32+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132295"},{"title":"Set and get Javascript variables from python","text":"%pyspark\nsession.setVar(\"myvar\", 10)\nsession.getVar(\"myvar\")","user":"anonymous","dateUpdated":"2017-03-11T10:41:40+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"10\n"}]},"apps":[],"jobName":"paragraph_1489155283846_1725194555","id":"20170304-170415_475929524","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:41:40+0100","dateFinished":"2017-03-11T10:41:40+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132296"},{"text":"%md\n**Note:**\nAngular calls are async. This can't be controlled from Python, so `session.getVar` my be called \"too early\", i.e. before Angular has finished its `$apply()` call.\n\nThat's why `session.getVar` has an additional parameter `delay` (default 200ms) to give Angular a chance to finish. \n\nExample: `session.getVar(\"myvar\", 500)` for 500ms\n","user":"anonymous","dateUpdated":"2017-03-10T15:56:34+0100","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong>Note:</strong><br/>Angular calls are async. This can&rsquo;t be controlled from Python, so <code>session.getVar</code> my be called &ldquo;too early&rdquo;, i.e. before Angular has finished its <code>$apply()</code> call.</p>\n<p>That&rsquo;s why <code>session.getVar</code> has an additional parameter <code>delay</code> (default 200ms) to give Angular a chance to finish. </p>\n<p>Example: <code>session.getVar(&quot;myvar&quot;, 500)</code> for 500ms</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1489155283847_1724809807","id":"20170304-220418_1112986702","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-10T15:56:34+0100","dateFinished":"2017-03-10T15:56:34+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132297"},{"title":"Registering a javascript function","text":"%pyspark\n\njsFunc = \"\"\"\nincrement = function(session, object) {\n    session.myvar +=  object.inc\n}\n\"\"\"\nsession.registerFunction(\"increment\", jsFunc)\n","user":"anonymous","dateUpdated":"2017-03-11T10:41:42+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1489155283848_1722886062","id":"20170304-171415_409342668","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:41:42+0100","dateFinished":"2017-03-11T10:41:42+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132298"},{"text":"%md\n**Note:**\nThe first parameter, `session`, is actually the Angular scope. So every variable `xyz` bound via `z.z.angularBind` can be accessed and changed in the function vie `session.xyz`","user":"anonymous","dateUpdated":"2017-03-10T16:02:08+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong>Note:</strong><br/>The first parameter, <code>session</code>, is actually the Angular scope. So every variable <code>xyz</code> bound via <code>z.z.angularBind</code> can be accessed and changed in the function vie <code>session.xyz</code></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1489157406333_859727881","id":"20170310-155006_57391036","dateCreated":"2017-03-10T15:50:06+0100","dateStarted":"2017-03-10T16:02:08+0100","dateFinished":"2017-03-10T16:02:08+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132299"},{"title":"Calling the registered function","text":"%pyspark\nsession.call(\"increment\", object={\"inc\":32})\n\nsession.getVar(\"myvar\", delay=1000) # Remember: async call above, so result might be outdated!\n","user":"anonymous","dateUpdated":"2017-03-11T10:42:37+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"74\n"}]},"apps":[],"jobName":"paragraph_1489155283849_1722501313","id":"20170304-174205_174725544","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:42:37+0100","dateFinished":"2017-03-11T10:42:38+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132300"},{"title":"Finally unregister the function again","text":"%pyspark\n\nsession.unregisterFunction(\"increment\")\n\nsession.call(\"increment\", object={\"inc\":32}) # will now show \"Unknown function: increment()\" in the Browser Javascript Console\n","user":"anonymous","dateUpdated":"2017-03-11T10:43:04+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1489155283850_1723655560","id":"20170304-203250_354437753","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:43:04+0100","dateFinished":"2017-03-11T10:43:04+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132302"},{"title":"Log $scope to Browsers Web Console for inspection","text":"%pyspark\nsession._dumpScope()\n","user":"anonymous","dateUpdated":"2017-03-11T10:43:06+0100","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Open the Browser Javascript Console to examine the Angular $scope that holds the Zeppelin Session\n"}]},"apps":[],"jobName":"paragraph_1489155283850_1723655560","id":"20170304-191304_776853471","dateCreated":"2017-03-10T15:14:43+0100","dateStarted":"2017-03-11T10:43:06+0100","dateFinished":"2017-03-11T10:43:06+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132303"},{"text":"%pyspark\n","dateUpdated":"2017-03-10T15:14:43+0100","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489155283851_1723270811","id":"20170304-220237_374359407","dateCreated":"2017-03-10T15:14:43+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:132304"}],"name":"Advanced Angular for Pyspark","id":"2CC9PZU7B","angularObjects":{"2CA5R39SP:shared_process":[],"2C9PBPHP2:shared_process":[{"name":"myvar","object":42,"noteId":"2CC9PZU7B"},{"name":"__zeppelin_comm_2CC9PZU7B_status__","object":"ZeppelinSession started (do not delete this paragraph)","noteId":"2CC9PZU7B"},{"name":"__zeppelin_comm_2CC9PZU7B_msg__","object":{"msg":{"delay":200,"function":"increment","object":{"inc":32}},"task":"call","id":17},"noteId":"2CC9PZU7B"}],"2C9T35AYY:shared_process":[],"2CDENW1UJ:shared_process":[],"2CA3CRS2J:shared_process":[],"2CAVHABDX:shared_process":[],"2CARY5ZYS:shared_process":[],"2CB9RSR89:shared_process":[],"2CASZNT3R:shared_process":[],"2CA4UU9ZH:shared_process":[],"2CCYSWEBF:shared_process":[],"2CA17HE2U:shared_process":[],"2CCHGTGDY:shared_process":[],"2CACZ48YM:shared_process":[],"2C9R2RW8Y:shared_process":[],"2CCZZ351R:shared_process":[],"2C9RAHG2K:shared_process":[],"2CCWBCHAT:shared_process":[],"2C9MFUCEM:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}