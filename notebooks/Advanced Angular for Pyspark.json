{"paragraphs":[{"title":"Some helper functions","text":"%pyspark\n\ndef versionCheck():\n    import sys\n    print(\"Python: \" + sys.version.replace(\"\\n\", \" - \"))\n    print(\"Spark:  \" + sc.version)\n\ndef display(html):\n    print(\"%angular\")\n    print(html)\n\ndef getNoteId():\n    return z.z.getInterpreterContext().getNoteId()\n\ndef getParagraphId():\n    return z.z.getInterpreterContext().getParagraphId()\n\n\nversionCheck()\n","user":"anonymous","dateUpdated":"2017-03-29T14:03:35+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165806_-1556010207","id":"20170304-121836_865067366","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T14:03:35+0200","dateFinished":"2017-03-29T14:03:35+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3499"},{"title":"Simple Angular variable binding","text":"%pyspark\n\ndisplay(\"\"\"\n\n<b>Hello {{name}} !</b>\n<div>Note Id:      <i>\"%s\"</i> (see browser address line)</div>\n<div>Paragraph Id: <i>\"%s\"</i> (see paragraph menu)</div>\n\n\"\"\" % (getNoteId(), getParagraphId()))\n\nz.z.angularBind(\"name\", \"Zeppelin\")\n","user":"anonymous","dateUpdated":"2017-03-29T13:49:38+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165807_-1556394956","id":"20170304-210239_1540885795","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T13:49:38+0200","dateFinished":"2017-03-29T13:49:38+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3500"},{"text":"%pyspark\n\nz.z.angularBind(\"name\", \"Apache Zeppelin\")\n","user":"anonymous","dateUpdated":"2017-03-29T13:49:41+0200","config":{"enabled":true,"editorMode":"ace/mode/python","results":{},"editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165809_-1546391485","id":"20170310-155555_57806824","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T13:49:41+0200","dateFinished":"2017-03-29T13:49:41+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3501"},{"title":"Trigger simple Javascript functions via DOM buttons","text":"%pyspark\n\ndisplay(\"\"\"<button id=\"abcde\" ng-click=\"run = run + 1\">Click {{run}}</button>\"\"\")\n\nz.z.angularBind(\"run\", 0)","dateUpdated":"2017-03-29T13:49:25+0200","config":{"enabled":true,"title":true,"tableHide":false,"results":{},"editorMode":"ace/mode/python","editorHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165809_-1546391485","id":"20170304-122140_404002024","dateCreated":"2017-03-29T13:49:25+0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3502"},{"text":"%md\n## How to trigger Javascript functions: ZeppelinSession, a custom Angular watcher\n\nClicking on some DOM button is sometimes OK, however it would be great to have a way to trigger Javascript functions from Python.\n\nSo let's use the capabilities of `z.z.angularBind`, `z.z.angularUnbind` and `z.z.angular` together with `$scope.$watch` (the Angular way to trigger javascript functions based on changed variables). This is implemnted in the class ZeppelinSession.\n\nPreparation step on the machine running Zeppelin Server:\n\n```\ngit clone https://github.com/bernhard-42/advanced-angular-for-pyspark\ncd advanced-angular-for-pyspark\npip install zeppelin_session    # use the pip command of the python installation used in Zeppelin\n```","dateUpdated":"2017-03-29T14:05:33+0200","config":{"enabled":true,"tableHide":false,"results":{},"editorMode":"ace/mode/markdown","editorHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165810_-1545237238","id":"20170304-134854_1991643647","dateCreated":"2017-03-29T13:49:25+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3503","user":"anonymous","dateFinished":"2017-03-29T14:05:33+0200","dateStarted":"2017-03-29T14:05:33+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>How to trigger Javascript functions: ZeppelinSession, a custom Angular watcher</h2>\n<p>Clicking on some DOM button is sometimes OK, however it would be great to have a way to trigger Javascript functions from Python.</p>\n<p>So let&rsquo;s use the capabilities of <code>z.z.angularBind</code>, <code>z.z.angularUnbind</code> and <code>z.z.angular</code> together with <code>$scope.$watch</code> (the Angular way to trigger javascript functions based on changed variables). This is implemnted in the class ZeppelinSession.</p>\n<p>Preparation step on the machine running Zeppelin Server:</p>\n<pre><code>git clone https://github.com/bernhard-42/advanced-angular-for-pyspark\ncd advanced-angular-for-pyspark\npip install zeppelin_session    # use the pip command of the python installation used in Zeppelin\n</code></pre>\n</div>"}]}},{"title":"Create a new session","text":"%pyspark\n\nfrom zeppelin_session import ZeppelinSession, resetZeppelinSession\n\nresetZeppelinSession(z.z)\nsession = ZeppelinSession(z.z)\n\n","user":"anonymous","dateUpdated":"2017-03-29T14:05:04+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165811_-1545621987","id":"20170304-135033_419842332","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T14:05:04+0200","dateFinished":"2017-03-29T14:05:04+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3504"},{"title":"Start the session (means start Angular watching)","text":"%pyspark\nsession.start()\n","user":"anonymous","dateUpdated":"2017-03-29T14:05:07+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165812_-1547545731","id":"20170304-162707_558911560","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T14:05:07+0200","dateFinished":"2017-03-29T14:05:07+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3505"},{"title":"Set and get Javascript variables from python","text":"%pyspark\nsession.setVar(\"myvar\", 10)\nsession.getVar(\"myvar\")","user":"anonymous","dateUpdated":"2017-03-29T14:05:15+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165813_-1547930480","id":"20170304-170415_475929524","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T14:05:15+0200","dateFinished":"2017-03-29T14:05:15+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3506"},{"text":"%md\n**Note:**\nAngular calls are async. This can't be controlled from Python, so `session.getVar` my be called \"too early\", i.e. before Angular has finished its `$apply()` call.\n\nThat's why `session.getVar` has an additional parameter `delay` (default 200ms) to give Angular a chance to finish. \n\nExample: `session.getVar(\"myvar\", 500)` for 500ms\n","dateUpdated":"2017-03-29T14:05:38+0200","config":{"enabled":true,"tableHide":false,"results":{},"editorMode":"ace/mode/markdown","editorHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165814_-1546776234","id":"20170304-220418_1112986702","dateCreated":"2017-03-29T13:49:25+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3507","user":"anonymous","dateFinished":"2017-03-29T14:05:38+0200","dateStarted":"2017-03-29T14:05:38+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong>Note:</strong><br/>Angular calls are async. This can&rsquo;t be controlled from Python, so <code>session.getVar</code> my be called &ldquo;too early&rdquo;, i.e. before Angular has finished its <code>$apply()</code> call.</p>\n<p>That&rsquo;s why <code>session.getVar</code> has an additional parameter <code>delay</code> (default 200ms) to give Angular a chance to finish. </p>\n<p>Example: <code>session.getVar(&quot;myvar&quot;, 500)</code> for 500ms</p>\n</div>"}]}},{"title":"Registering a javascript function","text":"%pyspark\n\njsFunc = \"\"\"\nincrement = function(session, object) {\n    session.myvar +=  object.inc\n}\n\"\"\"\nsession.registerFunction(\"increment\", jsFunc)\n","user":"anonymous","dateUpdated":"2017-03-29T14:05:18+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165814_-1546776234","id":"20170304-171415_409342668","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T14:05:18+0200","dateFinished":"2017-03-29T14:05:18+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3508"},{"text":"%md\n**Note:**\nThe first parameter, `session`, is actually the Angular scope. So every variable `xyz` bound via `z.z.angularBind` can be accessed and changed in the function vie `session.xyz`","dateUpdated":"2017-03-29T14:05:40+0200","config":{"enabled":true,"tableHide":false,"editorMode":"ace/mode/markdown","results":{},"editorHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165815_-1547160983","id":"20170310-155006_57391036","dateCreated":"2017-03-29T13:49:25+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3509","user":"anonymous","dateFinished":"2017-03-29T14:05:40+0200","dateStarted":"2017-03-29T14:05:40+0200","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong>Note:</strong><br/>The first parameter, <code>session</code>, is actually the Angular scope. So every variable <code>xyz</code> bound via <code>z.z.angularBind</code> can be accessed and changed in the function vie <code>session.xyz</code></p>\n</div>"}]}},{"title":"Calling the registered function","text":"%pyspark\nsession.call(\"increment\", object={\"inc\":32})\n\nsession.getVar(\"myvar\", delay=1000) # Remember: async call above, so result might be outdated!\n","user":"anonymous","dateUpdated":"2017-03-29T14:05:22+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165816_-1549084727","id":"20170304-174205_174725544","dateCreated":"2017-03-29T13:49:25+0200","dateStarted":"2017-03-29T14:05:22+0200","dateFinished":"2017-03-29T14:05:23+0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3510"},{"title":"Finally unregister the function again","text":"%pyspark\n\nsession.unregisterFunction(\"increment\")\n\nsession.call(\"increment\", object={\"inc\":32}) # will now show \"Unknown function: increment()\" in the Browser Javascript Console\n","dateUpdated":"2017-03-29T13:49:25+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165816_-1549084727","id":"20170304-203250_354437753","dateCreated":"2017-03-29T13:49:25+0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3511"},{"title":"Log $scope to Browsers Web Console for inspection","text":"%pyspark\nsession._dumpScope()\n","dateUpdated":"2017-03-29T13:49:25+0200","config":{"enabled":true,"title":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165817_-1549469476","id":"20170304-191304_776853471","dateCreated":"2017-03-29T13:49:25+0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3512"},{"text":"%pyspark\n","dateUpdated":"2017-03-29T13:49:25+0200","config":{"enabled":true,"results":{},"editorMode":"ace/mode/python","editorSetting":{"language":"python"},"colWidth":12},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1490788165818_-1548315229","id":"20170304-220237_374359407","dateCreated":"2017-03-29T13:49:25+0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3513"}],"name":"Advanced Angular for Pyspark","id":"2CEP9ZCWQ","angularObjects":{"2CDNFBMGA:shared_process":[],"2CCZEM8GY:shared_process":[],"2CCEZZU57:shared_process":[],"2CEPA7GWA:shared_process":[],"2CDEZTV3Y:shared_process":[],"2CBTVUKD8:shared_process":[],"2CDQ1TN3G:shared_process":[],"2CBJ3JDPV:shared_process":[],"2CDADYZPC:shared_process":[],"2CDMAWYTG:shared_process":[],"2CCPMSEBH:shared_process":[],"2CBDN5VDU:shared_process":[{"name":"myvar","object":42,"noteId":"2CEP9ZCWQ"},{"name":"__zeppelin_comm_2CEP9ZCWQ_msg__","object":{"id":2,"task":"call","msg":{"delay":200,"object":{"inc":32},"function":"increment"}},"noteId":"2CEP9ZCWQ"},{"name":"__zeppelin_comm_2CEP9ZCWQ_status__","object":"ZeppelinSession started (do not delete this paragraph)","noteId":"2CEP9ZCWQ"}],"2CBXVZ89X:shared_process":[],"2CC1G649T:shared_process":[],"2CEQTHQNU:shared_process":[],"2CE2HBWUD:shared_process":[],"2CEJFVVJM:shared_process":[],"2CET6ZSSR:shared_process":[],"2CC5X9SE4:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}